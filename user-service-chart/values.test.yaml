# Default values for user-service-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: <repo_url>/user-service
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "0.5.0"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

release:
  service_name: user-service
  project_name: pipeline-demo
  platform: test
  java_home: /usr/local/java
  db_host: mysql
  db_port: 3306
  db_user: AgAuTAxhXiVL+Op14L/Fb0nP7+tYBkBQ7Puo+Z4TPk9hoxPzS/mRrGKkImKOC5HaHJ815hwWh89rIBodCQjEp2sI6ZGxVipyVGcOwrT2VHoHYrcy7zgw9eN9I2p+wmVT5SyLrQBwm/8wctzKi2dCbswFoy1LGu4MP0crGPAT44JQqduoTEA+u0WhVQzEUaPDmRgLjifchn3LFp8Tm0Buc6F50FRvfagUfIZOCIlDGSQdGhq0qVR71qdIpyxSJPVsomkZv0LLYRMKz7jCkWhxXwSeWdH2xqXrpGqew6J1OpOrY2hmaDwwVBqwcANtKHnB805eIjzEhjjWz3iGhurbbslR8nf8JJzVeeZ9BPYqscQpwjBdblt4WsENmEI6ZxPBv0wy5WAahSp+J2v3lXJ7fjxTyRoKiB8EZmBF1LpHcqDauJq/rrYSFjstRB5tB1qKWD/wbOM8uTYh7CnMDI2O+zYM1AD1vljTxWzua3GzavzFdlBPaGNuzZHoDfn8KrunE1s48unZVDTEF0e1KVfDATMpoUy0/2+4/AEfG3XMsxxz+21qL+jqwNLgjbrBGRah10rlKE/uEJsGES4iY8m3CoqIDkeJobXXTO01sx+XIBkG3unI4bvoFvleZbKgFyYS48cKKLnsB6s8mxE1x11w0Rk7yhun3f/5/htxT8s/21owZibY239JngDojgXm23muOM8I+T/mJFodwAgl
  db_passwd: AgAJyXIpGQUJkUfmPk8J1Z/4d9c6vvq9RswdxkXbXEJ9WnhzWqwXabwuyMG6BlTkHbCOKVooVUTxnw/KMnplvBUzhZbm1U5l5qpPtBdJlZ+oywI1+5IV6NqPB5niGio31OOn3a7ucS0LSD6cFyH2SCcVnlgwtfxcOsXA/N1cjh1wXunaUhkbx0dF8E/r6OU5Gi4Aj51RUJ2q82lhNNZ1qNoqnySfCWDyLuX/D55l+EiWPYveBHYcTN/sBNx9wNnUD0TI/DowmXMFh3tbxIXo1zxriBpviCCuukwOElGN84IlkDT/OJFnhEZjAg8GN2/FqQF5Dn+pOGS2NOTs7D25J1CeAAbZXpTHCV2LSBxcm7YVe1RvL4yMjAqpRofH21dVtAQgUIZRuY8Myxbl5d/BriNn2Szskj4xQ3KPkx1uwpH3/LIPGHFiqB07biwFYY+FwP4L4BvcdK7M1LwC3grTYDdFG1bUuC/xjxaB6OtFWQIPKc84LrosRw3zC6CQDUjts36u5wP4BICzqCDPkXF7fmAAO6XDjO8XEaYMoE2/rgC3TdWcTqDDsY3hQr4VMUWXlCHdc+B8/pcrFFHAO0Fu/pua1jpIQ4UnHoQBuGxbLZ0HSLoN9GP2XuDM4Yjq00r9W0aSqZ1rXUqy5GQ9PJy6VYHiTboNgVVdHPO1w8e7D0BR0NFRbqbh0NeUWYVQvrIU4DLAOJ/J1md/WHohPA==


nodeSelector: {}

tolerations: []

affinity: {}
