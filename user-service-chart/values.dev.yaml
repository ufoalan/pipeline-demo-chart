# Default values for user-service-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: <repo_url>/user-service
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "0.5.0"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

release:
  service_name: user-service
  project_name: pipeline-demo
  platform: dev
  java_home: /usr/local/java
  db_host: mysql
  db_port: 3306
  db_user: AgCozr95cqJFCqZ2Ff/i4+xFKOrKIGeYiN5PcYdWLj1ZjGNXkIPq3wW87xoogBQ33R8J57/hxz37Wg5h/IjstxNMv3WadlxzAUFdAyz83eAy6MWAhC1lxxmqAHvD4HLZWjODggiqdb6BlxUKIWweTlo/8HMVTjC7QtMMVhrymQSoHG5aalgzYyhYoxvnbyKB83EEqg+NNPtU4BXuSdj173l6xJOgLNRb69zX/Hx5Ynlplqp/WCqVdHwaPKZsrImeKh5PicM2G857vqql3i9VTIXHRf3x3S7R9mPQ4iLY6/g98CvQw/3rAiic9kW0o10mIy9R9K9hF0ijlmw5wFBpwycKVVuPfP9JH73Kj1tqeXvHY7h9t33sIEGZ9Ek+CkJit8cI4ISIaMVMdNlwTAZlodyrZ3q4fQbid0XzBsl0miuYW1/gbDyVDlKOL0kJyMgp/LluArFAg7IsbwfSaO9XoR0U48raOfEVYwy6DhGngNKwa+ApFk2cdDEsMkTNMpFYoTmT+PLTm+iTz+ufwgtWblhuih7kLqFqqDy1c27hXIq8KP7g3zMg87jhsJAaj+Bt0Gd+kWi45KB4EwfzPQHDSb2Urw9voyUlnvb905MOfi3De0JpI3xYX6LiXL5R5lvAiRVvqEcqze4VxtS2CopQnmBTf0orySp7vOaGTm0fiZxav0VMPCRFX4W+NqgtP094DeKqD9hKVl1Y+YRq
  db_passwd: AgBKBzQch7Qqo8S0l/iWrj7WajvK4KJtOcIWOyKW4pLOWpncmfQd1jB5mFf8Za8ps0SADfSrTAw3fqwWXvTP8oF9FqNAZOD+gEaTvsqrtO+mIexZlem8Xhcs9nV0T2rhA9O8HW6FF+7uZbCudF9ZEK6aKmYJ1jpFR5e3VWlPn3O+XbY9idmmpDQcZ0a5i4ljiH3cfTt/3GZ/JYVGwh+o9ongXbhFXnLbBHPBdYjzHlPfpHP3dxoIsy7cIKE2dMz8JMM8AfBkt07pTPKfzhTn60WOYJSwOtsvChzLVyjQPQW4tqEqP6S1qWaSSFZmrcJFIjv3SWOIrWPi/RigWojiYslEoWIl2IPaPQreH6uNzhJeHD5dc1QdS9orBEfDEUQKonQGSlePznHW6sUKz6Lhbu3cSFxjj65DAqpJ0ytF15+Db5bVOOz2omVVs+PDJZziPyVxdEsjvmWPRYtIrzkRr8k6P4AvU7Y3KPLRtyVLPMTbytV19umJQNaHoPRvp5eqPLtAZ5H5X8fLjrM7WheQ6LhWdHLrUCXUJkBIabGvErRxP2Pep2QikZVMRkGJe5ngVf3z4uS4v/rFOzEiXRXPT7fJoEkgckwpVEyD4cvGWpeLfrSW5jaKml4pXrlAu08fbS/8HLXybfjsoM5KYUGU6mHoi4A0BIIj6SHJQL/k1cBJ73ATVYCmCUc9qc/FEwXpFGQgXh45cOok1TB/Yw==
  

nodeSelector: {}

tolerations: []

affinity: {}
